1. 文件夹概述
examples 文件夹是Petersen音乐系统的演示和示例集合，旨在帮助用户快速理解和测试系统功能。
文件数量适中（7个），覆盖从基础使用到高级功能的各个层面。

主要作用：提供开箱即用的演示脚本，用户可以通过运行这些文件体验系统的不同方面。
依赖关系：所有文件都依赖 Source 目录下的核心模块（如 enhanced_petersen_player.py），并使用相同的导入路径设置。
运行环境：需要Python 3.7+、FluidSynth库和SoundFont文件。
优势：模块化设计，便于用户选择性运行；涵盖基础到高级的完整链条。
潜在风险：如果核心模块有问题，这些演示文件也会受影响。

2. 各文件详细说明
基于文件名和典型Petersen系统功能，梳理了每个文件的预期用途：

basic_usage_demo.py：
用途：基础使用演示。展示系统的基本API，如创建播放器、播放简单频率、应用预设。
核心功能：初始化播放器、播放单个音符或简单序列、基本音效应用。
适用场景：新用户入门，验证系统安装。
预期结构：简短的main函数，包含几个基本调用。

advanced_features_demo.py：
用途：高级功能演示。展示系统的复杂特性，如精确频率播放、音效链、表现力控制。
核心功能：多音符序列播放、实时音效调整、表现力曲线应用。
适用场景：开发者测试高级API，展示系统能力。
预期结构：更复杂的演示流程，可能包含多个阶段。

batch_automation_demo.py：
用途：批处理自动化演示。展示大规模任务处理，如批量分析、自动化测试套件。
核心功能：批处理任务队列、自动化SoundFont分析、多音阶处理、性能基准测试。
适用场景：批量操作演示，系统性能测试。
预期结构：包含BatchProcessor类和自动化演示函数。

comprehensive_showcase.py：
用途：综合展示。整合多种功能，提供完整的系统演示。
核心功能：组合基础、高级、批处理功能，形成完整的工作流程。
适用场景：全面展示系统，适合演示或教程。
预期结构：长脚本，包含多个演示模块。

interactive_demo.py：
用途：交互式演示。提供命令行界面，让用户实时探索功能。
核心功能：基于cmd模块的CLI，支持命令如status、soundfonts、play_scale等。
适用场景：用户交互体验，教育用途。
预期结构：PetersenPlayerCLI类，包含多个do_*方法。

petersen_scale_demo.py：
用途：Petersen音阶专用演示。专注于音阶特性展示。
核心功能：音阶分析、频率精确度、多模式对比、表现力展示、教育模式。
适用场景：音阶研究，技术演示。
预期结构：多个独立演示函数，如petersen_analysis_demo、frequency_accuracy_demo（与petersen_wuxing_demo互补）。

petersen_wuxing_demo.py：
用途：Petersen五行文化融合演示。将Petersen音阶与中国五行理论结合。
核心功能：五行音阶生成、相生相克关系、阴阳平衡、四季变化、情绪表达。
适用场景：文化融合展示，跨学科演示。
预期结构：WuXingElement枚举、PetersenWuXingSystem类（与petersen_scale_demo互补）。